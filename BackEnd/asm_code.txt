push 17;
; // 'var' init, loc_addr: 0
push rsp;
push 1;
add;
pop rsp; stack_ptr++
;#====Init_Var=Assinment===#
pop [0]; // 'var' assinment
;#======End=Assinment======#

;#=========Function========#
jmp func_end:;
func:
;#=======Input=Action======#
push rbp
push rsp
pop rbp
;#=======End=Action========#

;#=========Init=Args=======#
;#========End=Init=========#

;#========Func=Body========#
push [0]; // access to 'var'
;#==========Call===========#

out;
;#=========End=Call========#
;#========Var=Return=======#
push 0;
pop rax
;#========End=Return=======#
;#========End=Body=========#

;#=======Leave=Action======#
push rbp;
pop rsp; stack_pointer = frame_pointer
pop  rbp;
ret;
func_end:;
;#=======End=Function======#

;#=========Function========#
jmp main_end:;
main:
;#=======Input=Action======#
push rbp
push rsp
pop rbp
;#=======End=Action========#

;#=========Init=Args=======#
;#========End=Init=========#

;#========Func=Body========#
;#==========Call===========#

call func:
;#=========End=Call========#
;#========Var=Return=======#
push 0;
pop rax
;#========End=Return=======#
;#========End=Body=========#

;#=======Leave=Action======#
push rbp;
pop rsp; stack_pointer = frame_pointer
pop  rbp;
ret;
main_end:;
;#=======End=Function======#
call main:
hlt;
