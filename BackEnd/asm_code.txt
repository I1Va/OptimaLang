
;#=========Function========#
jmp main_end:;
main:
;#=======Input=Action======#
push rbp
push rsp
pop rbp
;#=======End=Action========#

;#=========Init=Args=======#
;#========End=Init=========#

;#========Func=Body========#
;#=============If==========#
jmp if_check_0:
if_start_0:
;#========#If_body#=========#
push 1;
;call print
    out;
    push 10;
    outc;
;#========#End_body#========#
jmp if_end_0:
else_start_0:
;#=======#Else_body#========#
push 0;
;call print
    out;
    push 10;
    outc;
;#========#End_body#========#
jmp if_end_0:
if_check_0:

push 52;
push 102;
more;
;#========Condition========#
push 0
je else_start_0:
jmp if_start_0:
;#======End=Condition=======#
if_end_0:
;#=========End=IF=========#
;#========Var=Return=======#
push 0;
pop rax
;#========End=Return=======#
;#========End=Body=========#

;#=======Leave=Action======#
push rbp;
pop rsp; stack_pointer = frame_pointer
pop  rbp;
ret;
main_end:;
;#=======End=Function======#
call main:
hlt;
