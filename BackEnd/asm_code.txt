jmp __MAIN_LAUNCH:


;#=========Function========#
main:
;#=======Input=Action======#
push rbp
push rsp
pop rbp
;#=======End=Action========#

;#=========Init=Args=======#
;#========End=Init=========#

;#========Func=Body========#
;#========Var=Init=========#
push 777;
; // 'a' init, loc_addr: 0
push rsp;
push 1;
add;
pop rsp; stack_ptr++
;#========End=Init=========#
;#====Init_Var=Assinment===#
pop [rbp+0]; // 'a' assinment
;#======End=Assinment======#
push [rbp+0]; // acces to 'a'
;#==========Call===========#

out;
;#=========End=Call========#
;#========Var=Return=======#
push 0;
pop rax
;#========End=Return=======#
;#========End=Body=========#

;#=======Leave=Action======#
push rbp;
pop rsp; stack_pointer = frame_pointer
pop  rbp;
ret;
;#=======End=Function======#


__MAIN_LAUNCH:
call main:
hlt;
